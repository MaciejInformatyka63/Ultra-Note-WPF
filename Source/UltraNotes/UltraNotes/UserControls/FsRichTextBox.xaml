<UserControl x:Class="UltraNotes.UserControls.FsRichTextBox"
             x:Name="RichTextBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UltraNotes.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

        <!-- Flat Button -->
        <ControlTemplate x:Key="FlatButtonControlTemplate" TargetType="{x:Type Button}">
            <Border x:Name="OuterBorder" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2">
                <Border x:Name="InnerBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" />
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#FF7CA0CC" />
                    <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#FFE4EFFD" />
                    <Setter TargetName="InnerBorder" Property="Background" Value="#FFDAE7F5" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#FF2E4E76" />
                    <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#FF116EE4" />
                    <Setter TargetName="InnerBorder" Property="Background" Value="#FF3272B8" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Flat Toggle Button -->
        <ControlTemplate x:Key="FlatToggleButtonControlTemplate" TargetType="{x:Type ToggleButton}">
            <Border x:Name="OuterBorder" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2">
                <Border x:Name="InnerBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" />
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#FF7CA0CC" />
                    <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#FFE4EFFD" />
                    <Setter TargetName="InnerBorder" Property="Background" Value="#FFDAE7F5" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#FF2E4E76" />
                    <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#FF116EE4" />
                    <Setter TargetName="InnerBorder" Property="Background" Value="#FF3272B8" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#FFFFC00A" />
                    <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#FFFFDE7F" />
                    <Setter TargetName="InnerBorder" Property="Background" Value="#FFFFD458" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </UserControl.Resources>

    <DockPanel LastChildFill="True" >
        <Border 
            DockPanel.Dock="Bottom" 
            BorderThickness="{Binding ElementName=FsRichTextBoxControl, Path=ToolbarBorderThickness}" 
            BorderBrush="{Binding ElementName=FsRichTextBoxControl, Path=ToolbarBorderBrush}" 
            SnapsToDevicePixels="True" >
            <!-- Barre d'outils de l'application 
            Contient:
             - Un bouton 'ajouter image' et 'ajouter checkbox';
             - Un menu déroulant pour choisir l'alignement du texte;
             - Un menu pour choisir la couleur du texte;
             - Un menu pour choisir la couleur d'arrière plan du texte;
             - Un menu déroulant pour sélectionner la police d'écriture;
             - Un menu déroulant pour sélectionner la police;
             - Un menu déroulant encadré pour sélectionner un style de titre;
             - Un menu déroulant encadré pour sélectionner un style de paragraphe;
             - Un menu déroulant encadré pour sélectionner un autre style;
            -->
            <WrapPanel x:Name="BarreOutils" DockPanel.Dock="Bottom" Height="31" Background="{Binding ElementName=FsRichTextBoxControl, Path=ToolbarBackground}">
                <!-- Bouton pour ajouter un document -->
                <Button x:Name="ButtonAdd" Background="{x:Null}" BorderBrush="{x:Null}" Width="25" Height="25" Cursor="Hand"
                        ToolTip="Ajouter un document">
                    <Image Source="../icons/texteditorcolor/ajouter.png"/>
                </Button>
                <!-- Bouton pour annuler une modification -->
                <Button x:Name="ButtonBackward2" Command="ApplicationCommands.Undo"
                        CommandTarget="{Binding ElementName=TextBox}" ToolTip="Annuler la modification"
                        Template="{StaticResource FlatButtonControlTemplate}" Margin="0,2"
                        Grid.Column="5" Background="{x:Null}" BorderBrush="{x:Null}" Width="30"
                        Height="Auto" Padding="0" Cursor="Hand">
                    <Image Source="../icons/texteditorcolor/annuler.png"/>
                </Button>
                <!-- Bouton pour rétablir la modification -->
                <Button x:Name="ButtonUndo" Command="ApplicationCommands.Redo"
                        CommandTarget="{Binding ElementName=TextBox}" ToolTip="Rétablir la modification"
                        Template="{StaticResource FlatButtonControlTemplate}" Margin="0,2"
                        Grid.Column="5" Background="{x:Null}" BorderBrush="{x:Null}" Width="30"
                        Height="Auto" Padding="0" Cursor="Hand">
                    <Image Source="../icons/texteditorcolor/retablir.png"/>
                </Button>
                <!-- Effet de gras -->
                <ToggleButton x:Name="BoldButton" Command="EditingCommands.ToggleBold"
                              CommandTarget="{Binding ElementName=TextBox}" ToolTip="Gras"
                              Template="{StaticResource FlatToggleButtonControlTemplate}"
                              Background="{x:Null}" BorderBrush="{x:Null}" Cursor="Hand" Height="31">
                    <Image Source="../icons/texteditorcolor/gras2.png" Margin="3,3"/>
                </ToggleButton>
                <!-- Effet d'italique -->
                <ToggleButton x:Name="ItalicButton" Command="EditingCommands.ToggleItalic"
                              CommandTarget="{Binding ElementName=TextBox}" ToolTip="Italique"
                              Template="{StaticResource FlatToggleButtonControlTemplate}"
                              Background="{x:Null}" BorderBrush="{x:Null}" Cursor="Hand" Height="31">
                    <Image Source="../icons/texteditorcolor/italique2.png" Margin="3,3"/>
                </ToggleButton>
                <!-- Effet de souligné -->
                <ToggleButton x:Name="UnderlineButton" Command="EditingCommands.ToggleUnderline"
                              CommandTarget="{Binding ElementName=TextBox}" ToolTip="Souligné"
                              Template="{StaticResource FlatToggleButtonControlTemplate}"
                              Background="{x:Null}" BorderBrush="{x:Null}" Cursor="Hand" Height="31">
                    <Image Source="../icons/texteditorcolor/souligne2.png" Margin="3,3"/>
                </ToggleButton>
                <!-- Aligné à gauche -->
                <ToggleButton x:Name="LeftButton" Command="EditingCommands.AlignLeft"
                        CommandTarget="{Binding ElementName=TextBox}" ToolTip="Aligner à gauche"
                        Template="{StaticResource FlatToggleButtonControlTemplate}"
                        Background="{x:Null}" BorderBrush="{x:Null}" Width="30" Height="31"
                        Cursor="Hand" Click="OnAlignmentButtonClick">
                    <Image Source="../icons/texteditorcolor/alignementgauche.png"/>
                </ToggleButton>
                <!-- Aligné au centre -->
                <ToggleButton x:Name="CenterButton" Command="EditingCommands.AlignCenter"
                        CommandTarget="{Binding ElementName=TextBox}" ToolTip="Centré"
                        Template="{StaticResource FlatToggleButtonControlTemplate}" Height="31"
                        Cursor="Hand" Click="OnAlignmentButtonClick">
                    <Image Source="../icons/texteditorcolor/alignementcentre.png"/>
                </ToggleButton>
                <!-- Aligné à droite -->
                <ToggleButton x:Name="RightButton" Command="EditingCommands.AlignRight"
                        CommandTarget="{Binding ElementName=TextBox}" ToolTip="Aligner à droite"
                        Template="{StaticResource FlatToggleButtonControlTemplate}"
                        Background="{x:Null}" BorderBrush="{x:Null}" Width="30" Height="31"
                        Cursor="Hand" Click="OnAlignmentButtonClick">
                    <Image Source="../icons/texteditorcolor/alignementdroite.png"/>
                </ToggleButton>
                <!-- Alignement justifie -->
                <ToggleButton x:Name="JustifyButton" Command="EditingCommands.AlignJustify"
                        CommandTarget="{Binding ElementName=TextBox}" ToolTip="Alignement justifié"
                        Template="{StaticResource FlatToggleButtonControlTemplate}"
                        Background="{x:Null}" BorderBrush="{x:Null}" Width="30" Height="31"
                        Cursor="Hand" Click="OnAlignmentButtonClick">
                    <Image Source="../icons/texteditorcolor/alignementjustifie.jpg"/>
                </ToggleButton>
                <!-- Insérer une case à cocher -->
                <Button x:Name="ButtonCheckBox" Background="{x:Null}" BorderBrush="{x:Null}" Width="30" Height="27"
                        Cursor="Hand" ToolTip="Case à cocher">
                    <Image Source="../icons/texteditor/checkbox1.png"/>
                </Button>
                <!-- Changer la couleur du texte -->
                <Menu x:Name="ButtonTextColor" Grid.Column="5" Background="{x:Null}" BorderBrush="{x:Null}" Width="30"
                      Height="30" Margin="0,2" Padding="0" Cursor="Hand" ToolTip="Changer la couleur du texte">
                    <MenuItem>
                        <MenuItem.Header>
                            <Image Source="../icons/texteditorcolor/couleurtexte.png" Margin="0,5,0,5"/>
                        </MenuItem.Header>
                        <MenuItem Header="Noir"/>
                        <MenuItem Header="Bleu"/>
                        <MenuItem Header="Rouge"/>
                        <MenuItem Header="Vert"/>
                    </MenuItem>
                </Menu>
                
                <!-- Police d'écriture  -->
                <ComboBox x:Name="FontFamilyCombo" Background="White" BorderBrush="{x:Null}" Cursor="Hand" Margin="5,0" Height="23"
                          ToolTip="Police d'écriture" IsEditable="True" SelectionChanged="OnFontFamilyComboSelectionChanged">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Width="250" />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontFamily="{Binding}" FontSize="15" Height="20"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <!-- Taille de police -->
                <ComboBox x:Name="FontSizeCombo" Background="White" BorderBrush="{x:Null}" Cursor="Hand" Margin="5,0" Height="23" Padding="3"
                           ToolTip="Taille de police" IsEditable="True" SelectionChanged="OnFontSizeComboSelectionChanged" >
                </ComboBox>
            </WrapPanel>
        </Border>
        <RichTextBox x:Name="TextBox" TextOptions.TextFormattingMode="Ideal" TextOptions.TextRenderingMode="Aliased"
                     AcceptsTab="True" AcceptsReturn="True" SpellCheck.IsEnabled="True" AllowDrop="True"
                     IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                     TextChanged="OnTextChanged" VerticalScrollBarVisibility="Auto" SelectionChanged="OnTextBoxSelectionChanged" />
    </DockPanel>
</UserControl>
