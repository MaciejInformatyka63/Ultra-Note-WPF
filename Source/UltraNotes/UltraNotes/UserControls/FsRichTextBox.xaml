<UserControl x:Class="UltraNotes.UserControls.FsRichTextBox"
             x:Name="RichTextBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UltraNotes.UserControls"
             mc:Ignorable="d"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

        <!-- Flat Button -->
        <ControlTemplate x:Key="FlatButtonControlTemplate" TargetType="{x:Type Button}">
            <Border x:Name="OuterBorder" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2">
                <Border x:Name="InnerBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{x:Null}" />
                    <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{x:Null}" />
                    <Setter TargetName="InnerBorder" Property="Background" Value="#FFE5E3E3" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Flat Toggle Button -->
        <ControlTemplate x:Key="FlatToggleButtonControlTemplate" TargetType="{x:Type ToggleButton}">
            <Border x:Name="OuterBorder" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0">
                <Border x:Name="InnerBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{x:Null}" />
                    <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{x:Null}" />
                    <Setter TargetName="InnerBorder" Property="Background" Value="#FFE5E3E3" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#FFD6D5D5" />
                    <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#FFD6D5D5" />
                    <Setter TargetName="InnerBorder" Property="Background" Value="#FFD6D5D5" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </UserControl.Resources>

    <DockPanel LastChildFill="True" >
        <WrapPanel  x:Name="BarreOutils"
                    Background="{Binding ElementName=FsRichTextBoxControl, Path=ToolbarBackground}"
                    DockPanel.Dock="Bottom" 
                    SnapsToDevicePixels="True" >
                    <!-- Barre d'outils de l'application 
                    Contient:
                     - Un bouton 'ajouter image' et 'ajouter checkbox';
                     - Un menu déroulant pour choisir l'alignement du texte;
                     - Un menu pour choisir la couleur du texte;
                     - Un menu pour choisir la couleur d'arrière plan du texte;
                     - Un menu déroulant pour sélectionner la police d'écriture;
                     - Un menu déroulant pour sélectionner la police;
                     - Un menu déroulant encadré pour sélectionner un autre style;
                    -->
            <!-- Bouton pour ajouter un document -->
            <Menu x:Name="ButtonAdd" Background="{x:Null}" BorderBrush="{x:Null}" Height="25" Cursor="Hand"
                    ToolTip="Ajouter un document">
                <MenuItem>
                    <MenuItem.Header>
                        <Image Source="../icons/texteditorcolor/ajouter.png"/>
                    </MenuItem.Header>
                    <MenuItem Header="Créer un style..." />
                    <MenuItem Header="Ajouter une image..." Click="AjoutImage_Click" />
                </MenuItem>
                
            </Menu>
            <!-- Bouton pour annuler une modification -->
            <Button x:Name="ButtonBackward2" Command="ApplicationCommands.Undo"
                    CommandTarget="{Binding ElementName=TextBox}" ToolTip="Annuler la modification"
                    Template="{StaticResource FlatButtonControlTemplate}" Margin="0,2"
                    Grid.Column="5" Background="{x:Null}" BorderBrush="{x:Null}" Width="30"
                    Height="Auto" Padding="0" Cursor="Hand">
                <Image Source="../icons/texteditorcolor/annuler.png"/>
            </Button>
            <!-- Bouton pour rétablir la modification -->
            <Button x:Name="ButtonUndo" Command="ApplicationCommands.Redo"
                    CommandTarget="{Binding ElementName=TextBox}" ToolTip="Rétablir la modification"
                    Template="{StaticResource FlatButtonControlTemplate}" Margin="0,2"
                    Grid.Column="5" Background="{x:Null}" BorderBrush="{x:Null}" Width="30"
                    Height="Auto" Padding="0" Cursor="Hand">
                <Image Source="../icons/texteditorcolor/retablir.png"/>
            </Button>
            <!-- Effet de gras -->
            <ToggleButton x:Name="BoldButton" Command="EditingCommands.ToggleBold"
                            CommandTarget="{Binding ElementName=TextBox}" ToolTip="Gras"
                            Template="{StaticResource FlatToggleButtonControlTemplate}"
                            Background="{x:Null}" BorderBrush="{x:Null}" Cursor="Hand" Height="31">
                <Image Source="../icons/texteditor/gras.png" Margin="5,5"/>
            </ToggleButton>
            <!-- Effet d'italique -->
            <ToggleButton x:Name="ItalicButton" Command="EditingCommands.ToggleItalic"
                            CommandTarget="{Binding ElementName=TextBox}" ToolTip="Italique"
                            Template="{StaticResource FlatToggleButtonControlTemplate}"
                            Background="{x:Null}" BorderBrush="{x:Null}" Cursor="Hand" Height="31">
                <Image Source="../icons/texteditor/italique.png" Margin="5,5"/>
            </ToggleButton>
            <!-- Effet de souligné -->
            <ToggleButton x:Name="UnderlineButton" Command="EditingCommands.ToggleUnderline"
                            CommandTarget="{Binding ElementName=TextBox}" ToolTip="Souligné"
                            Template="{StaticResource FlatToggleButtonControlTemplate}"
                            Background="{x:Null}" BorderBrush="{x:Null}" Cursor="Hand" Height="31">
                <Image Source="../icons/texteditor/souligne.png" Margin="5,5"/>
            </ToggleButton>
            <!-- Aligné à gauche -->
            <ToggleButton x:Name="LeftButton" Command="EditingCommands.AlignLeft"
                    CommandTarget="{Binding ElementName=TextBox}" ToolTip="Aligner à gauche"
                    Template="{StaticResource FlatToggleButtonControlTemplate}"
                    Background="{x:Null}" BorderBrush="{x:Null}" Width="30" Height="31"
                    Cursor="Hand" Click="OnAlignementBoutonClick">
                <Image Source="../icons/texteditor/alignementgauche.png" Margin="3,3"/>
            </ToggleButton>
            <!-- Aligné au centre -->
            <ToggleButton x:Name="CenterButton" Command="EditingCommands.AlignCenter"
                    CommandTarget="{Binding ElementName=TextBox}" ToolTip="Centré"
                    Template="{StaticResource FlatToggleButtonControlTemplate}" Height="31"
                    Cursor="Hand" Click="OnAlignementBoutonClick">
                <Image Source="../icons/texteditor/alignementcentre.png" Margin="3,3"/>
            </ToggleButton>
            <!-- Aligné à droite -->
            <ToggleButton x:Name="RightButton" Command="EditingCommands.AlignRight"
                    CommandTarget="{Binding ElementName=TextBox}" ToolTip="Aligner à droite"
                    Template="{StaticResource FlatToggleButtonControlTemplate}"
                    Background="{x:Null}" BorderBrush="{x:Null}" Width="30" Height="31"
                    Cursor="Hand" Click="OnAlignementBoutonClick">
                <Image Source="../icons/texteditor/alignementdroite.png" Margin="3,3"/>
            </ToggleButton>
            <!-- Alignement justifie -->
            <ToggleButton x:Name="JustifyButton" Command="EditingCommands.AlignJustify"
                    CommandTarget="{Binding ElementName=TextBox}" ToolTip="Alignement justifié"
                    Template="{StaticResource FlatToggleButtonControlTemplate}"
                    Background="{x:Null}" BorderBrush="{x:Null}" Width="30" Height="31"
                    Cursor="Hand" Click="OnAlignementBoutonClick">
                <Image Source="../icons/texteditor/alignementjustifie.png" Margin="3,3"/>
            </ToggleButton>
            <!-- Insérer une case à cocher -->
            <Button x:Name="ButtonCheckBox" Background="{x:Null}" BorderBrush="{x:Null}" Height="27"
                    Cursor="Hand" ToolTip="Case à cocher"
                    Template="{StaticResource FlatButtonControlTemplate}">
                <Image Source="../icons/texteditor/checkbox1.png" Margin="3,3"/>
            </Button>
            <!-- Insérer une puce normale -->
            <ToggleButton x:Name="BulletsButton" Command="EditingCommands.ToggleBullets"
                    CommandTarget="{Binding ElementName=TextBox}"
                    Template="{StaticResource FlatToggleButtonControlTemplate}"
                    Background="{x:Null}" BorderBrush="{x:Null}" Height="27"
                    Cursor="Hand" ToolTip="Puce"
                    Click="OnListButtonClick">
                <Image Source="../icons/texteditor/puces.png" Margin="3,3"/>
            </ToggleButton>
            <!-- Insérer une puce numérotée -->
            <ToggleButton x:Name="NumberingButton" Command="EditingCommands.ToggleNumbering"
                    CommandTarget="{Binding ElementName=TextBox}"
                    Background="{x:Null}" BorderBrush="{x:Null}" Height="27"
                    Template="{StaticResource FlatToggleButtonControlTemplate}"
                    Cursor="Hand" ToolTip="Puce"
                    Click="OnListButtonClick">
                <Image Source="../icons/texteditor/pucesnum.png" Margin="3,3"/>
            </ToggleButton>
            <!-- Changer la couleur du texte -->
            <xctk:ColorPicker Name="FontColorCombo" SelectedColorChanged="OnFontColorComboSelectionChanged" Margin="5,0" Width="40" Height="23" ></xctk:ColorPicker>
            <!-- Police d'écriture  -->
            <ComboBox x:Name="FontFamilyCombo" Background="White" BorderBrush="{x:Null}" Cursor="Arrow" Margin="5,0" Height="23"
                        ToolTip="Police d'écriture" IsEditable="True" SelectionChanged="OnFontFamilyComboSelectionChanged">
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Width="250" />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" FontFamily="{Binding}" FontSize="15" Height="20"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <!-- Taille de police -->
            <ComboBox x:Name="FontSizeCombo" Background="White" BorderBrush="{x:Null}" Cursor="Arrow" Margin="5,0" Height="23" Padding="3"
                        ToolTip="Taille de police" IsEditable="True" SelectionChanged="OnFontSizeComboSelectionChanged" >
            </ComboBox>
            <!-- Styles utilisateur -->
            <ComboBox x:Name="StyleCombo" Background="White" BorderBrush="{x:Null}" Cursor="Arrow" Margin="5,0" Height="23"
                        ToolTip="Style utilisateur" IsEditable="True" SelectionChanged="OnStyleComboSelectionChanged">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Nom}" FontFamily="{Binding PoliceEcriture}" FontSize="{Binding TailleDePolice}" Foreground="{Binding CouleurTexte}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </WrapPanel>
        <RichTextBox x:Name="TextBox" TextOptions.TextFormattingMode="Ideal" TextOptions.TextRenderingMode="Aliased"
                     AcceptsTab="True" AcceptsReturn="True" SpellCheck.IsEnabled="True" AllowDrop="True" FontSize="14" Padding="4,8,4,10"
                     IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                     Tag="{Binding ElementName=RichTextBox,Path=Tag,Mode=TwoWay}"
                     TextChanged="OnTextChanged" VerticalScrollBarVisibility="Auto"/>
    </DockPanel>
</UserControl>
